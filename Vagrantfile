# -*- mode: ruby -*-
# vi: set ft=ruby :

$masterscript = <<SCRIPT
#!/bin/sh

# No output is generated by this script.

# Simulate uploading files as ozone does.
cp /vagrant/install/install.sh ~/ozone_install.sh
cp /vagrant/run/run.sh ~/ozone_run.sh
cp /vagrant/run/files/node.json ~/ozone_node.json
cp /vagrant/run/files/solo.rb ~/ozone_solo.rb

# Commands are executed initially in the homedir.
cd ~

# Exit on error or others.
error () {
  echo "Failure in main script"
  exit 1
}
trap error SIGHUP SIGINT SIGTERM ERR

# Random function since not all shells have $RANDOM
random () {
    hexdump -n 2 -e '/2 "%u"' /dev/urandom
}

#set temp dir to $TMPDIR or /tmp
if test "x$TMPDIR" = "x"; then
  TMPDIR="/tmp"
fi

#create tmp dir
OZONE_TMP_DIR="$TMPDIR/ozone/chef.$$.`random`"
(umask 077 && mkdir -p "$OZONE_TMP_DIR") || exit 1

#may be used by scripts
export TMPDIR
export OZONE_TMP_DIR
 
# Variables are usually defined under /config, where filenames designates the key and the contents the value.
# In the end all variables are parsed and exprted as environment variables. 

# The url of which the cookbooks can be downloaded. Should always be a tar.gz. Use github and specific branches for more control.
export CHEF_COOKBOOKS_URL="https://github.com/ozone-io/bootstrap-chef-test-cookbooks/archive/master.tar.gz"
# The path in the tar.gz that contains all the cookbooks.
export CHEF_COOKBOOKS_TAR_PATH="bootstrap-chef-test-cookbooks-master/cookbooks"
# This installs chef even if chef-solo exists.
export CHEF_ALWAYS_INSTALL_CHEF="false"
# The arguments to the chef install script. The following arg is the specification of a version.
export CHEF_INSTALL_SCRIPT_ARGS="-v11.10.4"
# The installl script location
export CHEF_INSTALL_SCRIPT="https://www.opscode.com/chef/install.sh"
# The cookbook path
export CHEF_COOKBOOK_PATH="/var/chef/cookbooks"

# Uploaded files and scripts are uploaded to the home directory with ssh, they are moved by ozone to a temporary location to not clutter the home folder.
# All files are prefixed with to make the files unique.
mv "ozone_node.json" "$OZONE_TMP_DIR/node.json"
mv "ozone_solo.rb" "$OZONE_TMP_DIR/solo.rb"
mv "ozone_install.sh" "$OZONE_TMP_DIR/install.sh"
mv "ozone_run.sh" "$OZONE_TMP_DIR/run.sh"

# RUN STEP install
"$OZONE_TMP_DIR"/install.sh

# RUN STEP run
"$OZONE_TMP_DIR"/run.sh
SCRIPT

Vagrant.configure(2) do |config|
    
    config.vm.provision "shell", inline: $masterscript

    config.vm.define "centos65" do |centos65|
      centos65.vm.box = "chef/centos-6.5"
    end

    config.vm.define "precise64" do |precise64|
      precise64.vm.box = "chef/ubuntu-12.04"
    end

    config.vm.define "quantal64" do |quantal64|
      quantal64.vm.box = "chef/ubuntu-12.10"
    end

    config.vm.define "raring64" do |raring64|
      raring64.vm.box = "chef/ubuntu-13.04"
    end

    config.vm.define "saucy64" do |saucy64|
      saucy64.vm.box = "chef/ubuntu-13.10"
    end

    config.vm.define "centos510" do |centos510|
      centos510.vm.box = "chef/centos-5.10"
    end

    config.vm.define "wheezy" do |wheezy|
      wheezy.vm.box = "chef/debian-7.4"
    end

    config.vm.define "squeeze" do |squeeze|
      squeeze.vm.box = "chef/debian-6.0.8"
    end

    config.vm.define "fedora20" do |fedora20|
      fedora20.vm.box = "chef/fedora-20"
    end

    config.vm.define "fedora19" do |fedora19|
      fedora19.vm.box = "chef/fedora-19"
    end

end